var e=Object.defineProperty;function t(e,t=!1){let n=window.crypto.getRandomValues(new Uint32Array(1))[0],r=`_${n}`;return Object.defineProperty(window,r,{value:n=>(t&&Reflect.deleteProperty(window,r),null==e?void 0:e(n)),writable:!1,configurable:!0}),n}async function n(e,n={}){return new Promise(((r,l)=>{let a=t((e=>{r(e),Reflect.deleteProperty(window,`_${o}`)}),!0),o=t((e=>{l(e),Reflect.deleteProperty(window,`_${a}`)}),!0);window.__TAURI_IPC__({cmd:e,callback:a,error:o,...n})}))}function r(e,t="asset"){let n=encodeURIComponent(e);return navigator.userAgent.includes("Windows")?`https://${t}.localhost/${n}`:`${t}://localhost/${n}`}((t,n)=>{for(var r in n)e(t,r,{get:n[r],enumerable:!0})})({},{convertFileSrc:()=>r,invoke:()=>n,transformCallback:()=>t});class l{constructor(e){this.path=e}static async load(e){return await n("plugin:sql|load",{db:e}).then((e=>new l(e)))}static get(e){return new l(e)}async execute(e,t){return await n("plugin:sql|execute",{db:this.path,query:e,values:null!=t?t:[]}).then((([e,t])=>({rowsAffected:e,lastInsertId:t})))}async select(e,t){return await n("plugin:sql|select",{db:this.path,query:e,values:null!=t?t:[]})}async close(e){return await n("plugin:sql|close",{db:e})}}export{l as default};
